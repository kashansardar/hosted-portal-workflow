openapi: 3.0.0
info:
  title: WhatsApp Cloud API
  description: >-
    Welcome to the WhatsApp API from Meta.


    Individual developers and existing Business Service Providers (BSPs) can now send and receive messages via the WhatsApp API using a cloud-hosted version of the WhatsApp Business API. Compared to the previous solutions, the cloud-based WhatsApp API is simpler to use and is a more cost-effective way for businesses to use WhatsApp. Please keep in mind the following configurations:


    | Name | Description |

    | --- | --- |

    | Version | Latest [Graph API version](https://developers.facebook.com/docs/graph-api/). For example: v13.0 |

    | User-Access-Token | Your user access token after signing up at [developers.facebook.com](https://developers.facebook.com). |

    | WABA-ID | Your WhatsApp Business Account (WABA) ID. |

    | Phone-Number-ID | ID for the phone number connected to the WhatsApp Business API. You can get this with a [Get Phone Number ID request](3184f675-d289-46f1-88e5-e2b11549c418). |

    | Business-ID | Your Business' ID. Once you have your Phone-Number-ID, make a [Get Business Profile request](#99fd3743-46cf-46c4-95b5-431c6a4eb0b0) to get your Business' ID. |

    | Recipient-Phone-Number | Phone number that you want to send a WhatsApp message to. |

    | Media-ID | ID for the media to [send a media message](#0a632754-3788-43bf-b785-ac6a73423d5a) or [media template message](#439c926a-8a6c-4972-ab2c-d99297716da9) to your customers. |

    | Media-URL | URL for the media to [download media content](#cbe5ece3-246c-48f3-b338-074187dfef66). |
  contact: {}
  version: '1.0'
servers:
- url: https://graph.facebook.com/{Version}
  variables:
    Version:
      default: v13.0
paths:
  /{Phone-Number-ID}:
    get:
      tags:
      - Phone Numbers
      summary: Get Phone Number By ID
      description: "When you query all the phone numbers for a WhatsApp Business Account, each phone number has an id. You can directly query for a phone number using this id."
      operationId: GetPhoneNumberByID
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhoneNumberByIDResponse'
              example:
                verified_name: Jasper's Market
                display_phone_number: +1 631-555-5555
                id: '1906385232743451'
                quality_rating: GREEN
    post:
      tags:
      - Two-Step Verification
      summary: Set Two-Step Verification Code
      description: "You are required to set up two-step verification for your phone number, as this provides an extra layer of security to the business accounts. You can use this endpoint to change two-step verification code associated with your account. \nAfter you change the verification code, future requests like changing the name, must use the new code. \n\nYou set up two-factor verification and register a phone number in the same API call."
      operationId: SetTwoStepVerificationCode
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetTwoStepVerificationCodeRequest'
            example:
              pin: <6-digit-pin>
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
  /{Phone-Number-ID}/register:
    post:
      tags:
      - Registration
      summary: Register Phone
      description: >-
        Used to register a phone number or to migrate WhatsApp Business Accounts from a current On-Premises deployment to the new Cloud-Based API. Business Solution Providers (BSPs) must authenticate themselves with an access token with the whatsapp_business_management permission.
      operationId: RegisterPhone
      parameters:
      - name: Phone-Number-ID
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPhoneRequest'
            example:
              messaging_product: whatsapp
              pin: <your-6-digit-pin>
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
  /{Phone-Number-ID}/deregister:
    post:
      tags:
      - Registration
      summary: Deregister Phone
      description: >-
        Used to deregister a phone number. Deregister phone removes a previously registered phone. You can always re-register your phone using by repeating the registration process. Business Solution Providers (BSPs) must authenticate themselves with an access token with the whatsapp_business_management permission.
      operationId: DeregisterPhone
      parameters:
      - name: Content-Type
        in: header
        description: ''
        required: true
        style: simple
        schema:
          enum:
          - application/json
          type: string
          example: application/json
      - name: Phone-Number-ID
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
  /{Phone-Number-ID}/whatsapp_business_profile:
    get:
      tags:
      - Business Profiles
      summary: Get Business Profile ID
      description: "Use this endpoint to retrieve your business’ profile. This business profile is visible to consumers in the chat thread next to the profile photo. The profile information will contain a business profile ID which you can use to make API calls."
      operationId: GetBusinessProfileID
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
        description: "Here you can specify what you want to know from your business as a comma separated list of fields. Available fields include: id, about, messaging_product, address, description, vertical, email, websites, profile_picture_url"
        example: "about,address,description,email,profile_picture_url,websites,vertical"
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessProfileIDResponse'
              example:
                data:
                - messaging_product: whatsapp
                  address: ADDRESS
                  description: DESCRIPTION
                  vertical: UNDEFINED
                  email: EMAIL
                  websites:
                  - https://WEBSITE-1
                  - https://WEBSITE-2
                  profile_picture_url: https://URL
                  id: BUSINESS_PROFILE_ID
    post:
      tags:
      - Business Profiles
      summary: Update Business Profile
      description: "Use this endpoint to update your business’ profile information such as the business description, email or address."
      operationId: UpdateBusinessProfile
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessProfileRequest'
            example:
              messaging_product: whatsapp
              address: ADDRESS
              description: DESCRIPTION
              vertical: UNDEFINED
              email: EMAIL
              websites:
              - https://WEBSITE-1
              - https://WEBSITE-2
              profile_picture_url: https://URL
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
  /{Phone-Number-ID}/media:
    post:
      tags:
      - Media
      summary: Upload Media
      description: "Used to upload media. All media files sent through this endpoint are encrypted and persist for 30 days."
      operationId: UploadMedia
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadMediaRequest'
            example:
              messaging_product: whatsapp
              file: '@/local/path/file.jpg'
              type: <MEDIA_TYPE>
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadMedia'
              example:
                id: '4490709327384033'                
  /{Phone-Number-ID}/messages:
    parameters:
    - name: Phone-Number-ID
      in: path
      description: ''
      required: true
      schema:
        type: string    
    post:
      tags:
      - Messages
      summary: Send Message
      operationId: SendMessage
      description: Use this endpoint to send text messages, media, message templates to your customers.
      requestBody:
        description: 'To send a message, you must first assemble a message object with the content you want to send.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
            example:
              messaging_product: whatsapp
              to: '{{Recipient-Phone-Number}}'
              type: template
              template:
                name: hello_world
                language:
                  code: en_US
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
              example:
                messaging_product: whatsapp
                contacts:
                - input: 48XXXXXXXXX
                  wa_id: '48XXXXXXXXX '
                messages:
                - id: wamid.gBGGSFcCNEOPAgkO_KJ55r4w_ww
    put:
      tags:
      - Messages
      summary: Mark Message As Read
      description: "When you receive an incoming message from Webhooks, you could use messages endpoint to change the status of it to read.  \nWe recommend marking incoming messages as read within 30 days of receipt.  \n**Note**: You cannot mark outgoing messages you sent as read.\n\nYou need to obtain the **`message_id`** of the incoming message from Webhooks."
      operationId: MarkMessageAsRead
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkMessageAsReadRequest'
            example:
              messaging_product: whatsapp
              status: read
              message_id: incoming-message-id
        required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true      
  /{Phone-Number-ID}/request_code:
    post:
      tags:
      - Phone Numbers
      summary: Request Verification Code
      description: "Used to request a code to verify a phone number's ownership. You need to verify the phone number you want to use to send messages to your customers. Phone numbers must be verified through SMS/voice call. The verification process can be done through the Graph API calls specified below."
      operationId: RequestVerificationCode
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestVerificationCodeRequest'
            example:
              code_method: SMS
              locale: en_US
        required: true
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
  /{Phone-Number-ID}/verify_code:
    post:
      tags:
      - Phone Numbers
      summary: Verify Code
      description: "Used to verify a phone number's ownership. After you have received a SMS or Voice request code for verification, you need to verify the code that was sent to you."
      operationId: VerifyCode
      parameters:
      - name: Phone-Number-ID
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
            example:
              code: <your-requested-code>
        required: true
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true
  /{Media-ID}:
    get:
      tags:
      - Media
      summary: Retrieve Media URL
      description: To retrieve your media’s URL, make a request to this endpoint. Later, you can use this URL to download the media file.
      operationId: RetrieveMediaURL
      parameters:
      - name: Media-ID
        in: path
        description: 'Media object ID from either uploading media endpoint or media message Webhooks'
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: OK. A successful response includes an object with a media URL. The URL is only valid for 5 minutes.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveMediaURLResponse'
              example:
                messaging_product: whatsapp
                url: <URL>
                mime_type: image/jpeg
                sha256: <HASH>
                file_size: '303833'
                id: '2621233374848975'
    delete:
      tags:
      - Media
      summary: Delete Media
      description: "This endpoint can be used for deleting a media object."
      operationId: DeleteMedia
      parameters:
      - name: Media-ID
        in: path
        description: 'Media object ID from either uploading media endpoint or media message Webhooks'
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              example:
                success: true                
components:
  schemas:
    GetPhoneNumberByIDResponse:
      title: GetPhoneNumberByIDResponse
      required:
      - verified_name
      - display_phone_number
      - id
      - quality_rating
      type: object
      properties:
        verified_name:
          type: string
          description: "The verified name associated with the phone number."
        display_phone_number:
          type: string
          description: "The string representation of the phone number."
        id:
          type: string
          description: "The ID associated with the phone number."
        quality_rating:
          description: "The quality rating of the phone number based on how messages have been received by recipients in recent days."
          allOf:
            - $ref: "#/components/schemas/QualityRating"
      example:
        verified_name: Jasper's Market
        display_phone_number: +1 631-555-5555
        id: '1906385232743451'
        quality_rating: GREEN
    QualityRating:
      title: QualityRating
      type: string
      description: "For more information relating to quality rating, see [About WhatsApp Business Account Message Quality Rating](https://www.facebook.com/business/help/896873687365001)."
      enum:
        - GREEN
        - YELLOW
        - RED
        - NA
      x-enum-elements:
        - name: Green
          description: High Quality.
        - name: Yellow
          description: Medium Quality.
        - name: Red
          description: Low Quality.
        - name: NA
          description: Quality has not been determined.     
    SetTwoStepVerificationCodeRequest:
      title: SetTwoStepVerificationCodeRequest
      description: "A 6-digit pin you wish to use for two-step authentication."
      required:
      - pin
      type: object
      properties:
        pin:
          type: string
      example:
        pin: <6-digit-pin>      
    SuccessResponse:
      title: SuccessResponse
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true        
    RegisterPhoneRequest:
      title: RegisterPhoneRequest
      required:
      - messaging_product
      - pin
      type: object
      properties:
        messaging_product:
          type: string
          description: 'Messaging service used. In this case, use "whatsapp".'
        pin:
          type: string
          description: 'A 6-digit pin you have previously set up - See Set Two-Step Verification.'
      example:
        messaging_product: whatsapp
        pin: <your-6-digit-pin>
    SendMessageResponse:
      title: SendMessageResponse
      required:
      - messaging_product
      - contacts
      - messages
      type: object
      properties:
        messaging_product:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ResponseContact'
          description: ''
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
          description: ''
      example:
        messaging_product: whatsapp
        contacts:
        - input: 48XXXXXXXXX
          wa_id: '48XXXXXXXXX '
        messages:
        - id: wamid.gBGGSFcCNEOPAgkO_KJ55r4w_ww
    ResponseContact:
      title: ResponseContact
      required:
      - input
      - wa_id
      type: object
      properties:
        input:
          type: string
        wa_id:
          type: string
      example:
        input: 48XXXXXXXXX
        wa_id: '48XXXXXXXXX '
    ResponseMessage:
      title: ResponseMessage
      required:
      - id
      type: object
      properties:
        id:
          type: string
      example:
        id: wamid.gBGGSFcCNEOPAgkO_KJ55r4w_ww
    Message:
      title: Message
      required:
      - messaging_product
      - to
      type: object
      properties:
        audio:
          type: object
          allOf:
          - $ref: '#/components/schemas/Audio'
          description: A media object containing audio. Required when type=audio.        
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
          description: A contact object. Required when type=contacts.
        document:
          type: object
          allOf:
          - $ref: '#/components/schemas/Document'
          description: A media object containing a document. Required when type=document.
        image:
          type: object
          allOf:
          - $ref: '#/components/schemas/Image'
          description: A media object containing an image. Required when type=image.
        interactive:
          type: object
          allOf:
          - $ref: '#/components/schemas/Interactive'
          description: 'This option is used to send List Messages and Reply Buttons. The components of each interactive object generally follow a consistent pattern: header, body, footer, and action. Required when type=interactive.'
        location:
          type: object
          allOf:
          - $ref: '#/components/schemas/Location'
          description: A location object. Required when type=location.        
        messaging_product:
          type: string
          description: Messaging service used for the request.
          example: whatsapp
        recipient_type:
          type: string
          description: Currently, you can only send messages to individuals.
          default: individual
        sticker:
          type: object
          allOf:
          - $ref: '#/components/schemas/Sticker'
          description: 'A media object containing a sticker. Currently, we support inbound both and outbound stickers: For outbound, we only support static third-party stickers. For inbound, we support all types of stickers. The sticker needs to be 512x512 pixels and the file’s size needs to be less than 100 KB. Required when type=sticker.'
        template:
          type: object
          allOf:
          - $ref: '#/components/schemas/Template'
          description: A template object. Required when type=template.          
        text:
          type: object
          allOf:
          - $ref: '#/components/schemas/Text'
          description: Required for text messages.
        to:
          type: string
          description: WhatsApp ID or phone number for the person you want to send a message to.
        type:
          type: object
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The type of message you want to send.
          example: text
        video:
          type: object
          allOf:
          - $ref: '#/components/schemas/Video'
          description: A media object containing a video. Required when type=video.             
      example:
        messaging_product: whatsapp
        to: '{{Recipient-Phone-Number}}'
        type: template
        template:
          name: hello_world
          language:
            code: en_US
    MessageType:
      title: MessageType
      enum:
      - text
      - audio
      - contacts
      - document
      - image
      - interactive
      - location
      - sticker
      - template
      - video
      type: string
      example: text
    Contact:
      title: Contact
      required:
      - name
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: Full contact address(es)
        birthday:
          type: string
          default: YYYY-MM-DD formatted string.
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailObject'
          description: Contact email address(es)
        name:
          type: object
          allOf:
          - $ref: '#/components/schemas/Name'
          description: Full contact name
        org:
          type: object
          allOf:
          - $ref: '#/components/schemas/Org'
          description: Contact organization information
        phones:
          type: array
          items:
            $ref: '#/components/schemas/PhoneObject'
          description: Contact phone number(s)
        urls:
          type: array
          items:
            $ref: '#/components/schemas/UrlObject'
          description: Contact URL(s)
      example:
        addresses:
        - street: <ADDRESS_STREET>
          city: <ADDRESS_CITY>
          state: <ADDRESS_STATE>
          zip: <ADDRESS_ZIP>
          country: <ADDRESS_COUNTRY>
          country_code: <ADDRESS_COUNTRY_CODE>
          type: WORK
        birthday: <CONTACT_BIRTHDAY>
        emails:
        - email: <CONTACT_EMAIL>
          type: HOME
        name:
          formatted_name: <CONTACT_FORMATTED_NAME>
          first_name: <CONTACT_FIRST_NAME>
          last_name: <CONTACT_LAST_NAME>
          middle_name: <CONTACT_MIDDLE_NAME>
          suffix: <CONTACT_SUFFIX>
          prefix: <CONTACT_PREFIX>
        org:
          company: <CONTACT_ORG_COMPANY>
          department: <CONTACT_ORG_DEPARTMENT>
          title: <CONTACT_ORG_TITLE>
        phones:
        - phone: <CONTACT_PHONE>
          wa_id: <CONTACT_WA_ID>
          type: WORK
        urls:
        - url: <CONTACT_URL>
          type: HOME
    Address:
      title: Address
      type: object
      properties:
        street:
          type: string
          description: Street number and name
        city:
          type: string
          description: City name.
        state:
          type: string
          description: State abbreviation.
        zip:
          type: string
          description: ZIP code.
        country:
          type: string
          description: Full country name.
        country_code:
          type: string
          description: Two-letter country abbreviation.
        type:
          $ref: '#/components/schemas/PersonalInformationType'
      example:
        street: <ADDRESS_STREET>
        city: <ADDRESS_CITY>
        state: <ADDRESS_STATE>
        zip: <ADDRESS_ZIP>
        country: <ADDRESS_COUNTRY>
        country_code: <ADDRESS_COUNTRY_CODE>
        type: HOME
    EmailObject:
      title: EmailObject
      type: object
      properties:
        email:
          type: string
        type:
          $ref: '#/components/schemas/PersonalInformationType'
      example:
        email: <CONTACT_EMAIL>
        type: WORK
    Name:
      title: Name
      required:
      - formatted_name
      type: object
      properties:
        formatted_name:
          type: string
          description: Full name, as it normally appears.
        first_name:
          type: string
        last_name:
          type: string
        middle_name:
          type: string
        suffix:
          type: string
        prefix:
          type: string
      example:
        formatted_name: <CONTACT_FORMATTED_NAME>
        first_name: <CONTACT_FIRST_NAME>
        last_name: <CONTACT_LAST_NAME>
        middle_name: <CONTACT_MIDDLE_NAME>
        suffix: <CONTACT_SUFFIX>
        prefix: <CONTACT_PREFIX>
    Org:
      title: Org
      type: object
      properties:
        company:
          type: string
          description: Name of the contact's company.
        department:
          type: string
          description: Name of the contact's department.
        title:
          type: string
          description: Contact's business title.
      example:
        company: <CONTACT_ORG_COMPANY>
        department: <CONTACT_ORG_DEPARTMENT>
        title: <CONTACT_ORG_TITLE>
    PhoneObject:
      title: PhoneObject
      type: object
      properties:
        phone:
          type: string
          description: Automatically populated with the wa_id value as a formatted phone number.
        wa_id:
          type: string
          description: WhatsApp ID.
        type:
          $ref: '#/components/schemas/PhoneType'
      example:
        phone: <CONTACT_PHONE>
        wa_id: <CONTACT_WA_ID>
        type: HOME
    PhoneType:
      title: PhoneType
      enum:
      - HOME
      - WORK
      - CELL
      - MAIN
      - IPHONE
      type: string
      example: HOME
    UrlObject:
      title: UrlObject
      type: object
      properties:
        url:
          type: string
        type:
          $ref: '#/components/schemas/PersonalInformationType'
      example:
        url: <CONTACT_URL>
        type: HOME
    PersonalInformationType:
      title: PersonalInformationType
      enum:
      - HOME
      - WORK
      type: string
      example: HOME
    Interactive:
      title: Interactive
      required:
      - type
      - body
      - action
      type: object
      properties:
        action:
          type: object
          allOf:
          - $ref: '#/components/schemas/Action'
          description: Action you want the user to perform after reading the message.
        body:
          type: object
          allOf:
          - $ref: '#/components/schemas/Body'
          maxLength: 1024
          description: The body of the message. Emojis and markdown are supported.
        footer:
          type: object
          allOf:
          - $ref: '#/components/schemas/Footer'
          maxLength: 60
          description: The footer of the message. Emojis and markdown are supported.
        header:
          type: object
          allOf:
          - $ref: '#/components/schemas/Header'
          description: Header content displayed on top of a message.
        type:
          type: object
          allOf:
          - $ref: '#/components/schemas/InteractiveType'
          description: The type of interactive message you want to send.
      example:
        type: list
        header:
          type: text
          text: <Header List Message>
        body:
          text: <List Body Message>
        footer:
          text: <Footer Message>
        action:
          button: Send
          sections:
          - title: <List Category Item>
            rows:
            - id: <Item ID>
              title: <Item Title>
              description: <Item Description>
            - id: <Item ID>
              title: <Item Title>
              description: <Item Description>
          - title: <List Item>
            rows:
            - id: <Item ID>
              title: <Item Title>
              description: <Item Description>
            - id: <Item ID>
              title: <Item Title>
              description: <Item Description>
    InteractiveType:
      title: InteractiveType
      enum:
      - list
      - button
      type: string
      description: The type of interactive message you want to send.
      example: button
    Action:
      title: Action
      type: object
      properties:
        button:
          maxLength: 20
          type: string
          description: Required for List Messages. Button content. It cannot be an empty string and must be unique within the message. Emojis are supported, markdown is not.
        buttons:
          maxItems: 3
          type: array
          items:
            $ref: '#/components/schemas/Button'
          description: Required for Reply Buttons. You can have up to 3 buttons. You cannot have leading or trailing spaces when setting the ID.
        sections:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Section'
          description: Required for List Messages.
      example:
        button: Send
        sections:
        - title: <List Category Item>
          rows:
          - id: <Item ID>
            title: <Item Title>
            description: <Item Description>
          - id: <Item ID>
            title: <Item Title>
            description: <Item Description>
        - title: <List Item>
          rows:
          - id: <Item ID>
            title: <Item Title>
            description: <Item Description>
          - id: <Item ID>
            title: <Item Title>
            description: <Item Description>
    Button:
      title: Button
      type: object
      required:
        - type
      properties:
        type:
          type: string
          default: reply
        title:
          maxLength: 20
          type: string
          description: Button title. It cannot be an empty string and must be unique within the message. Emojis are supported, markdown is not.
        id:
          maxLength: 256
          type: string
          description: Unique identifier for your button. This ID is returned in the webhook when the button is clicked by the user.   
    Body:
      title: Body
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 1024
          type: string
          description: The body content of the message. Emojis and markdown are supported. Links are supported.
      example:
        text: <List Body Message>
    Footer:
      title: Footer
      required:
      - text
      type: object
      properties:
        text:
          maxLength: 60
          type: string
          description: The footer content. Emojis and markdown are supported. Links are supported.
      example:
        text: <Footer Message>
    Header:
      title: Header
      required:
      - type
      type: object
      properties:
        type:
          type: object
          allOf:
          - $ref: '#/components/schemas/HeaderType'
          description: The header type you would like to use.
        text:
          maxLength: 60
          type: string
          description: Required if type is set to text. Text for the header. Formatting allows emojis, but not markdown. 
        video:
          type: object
          allOf:
          - $ref: '#/components/schemas/Video'
          description: Required if type is set to video. Contains the media object for this video.
        image:
          type: object
          allOf:
          - $ref: '#/components/schemas/Image'
          description: Required if type is set to image. Contains the media object for this image.
        document:
          type: object
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Required if type is set to document. Contains the media object for this document.
      example:
        type: text
        text: <Header List Message>
    HeaderType:
      title: HeaderType
      enum:
      - text
      - document
      - image
      - video
      type: string
      example: text
      x-enum-elements:
      - name: Text
        description: Used for List Messages and Reply Buttons.
      - name: Document
        description: Used for Reply Buttons.
      - name: Image
        description: Used for Reply Buttons.
      - name: Video
        description: Used for Reply Buttons.
    Section:
      title: Section
      type: object
      properties:
        title:
          maxLength: 24
          type: string
          description: Required if the message has more than one section. Title of the section.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
          description: 'Required for List Messages. Contains a list of rows. You can have a total of 10 rows across your sections. Each row must have a title (Maximum length: 24 characters) and an ID (Maximum length: 200 characters). You can add a description (Maximum length: 72 characters), but it is optional.'
      example:
        title: <List Category Item>
        rows:
        - id: <Item ID>
          title: <Item Title>
          description: <Item Description>
        - id: <Item ID>
          title: <Item Title>
          description: <Item Description>
    Row:
      title: Row
      required:
      - id
      - title
      type: object
      properties:
        id:
          maxLength: 200
          type: string
        title:
          maxLength: 24
          type: string
        description:
          maxLength: 72
          type: string
      example:
        id: <Item ID>
        title: <Item Title>
        description: <Item Description>
    Location:
      title: Location
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          type: string
          description: Latitude of the location.
        longitude:
          type: string
          description: Longitude of the location.
        name:
          type: string
          description: Name of the location.
        address:
          type: string
          description: Address of the location. Only displayed if name is present.
      example:
        latitude: <LOCATION_LATITUDE>
        longitude: <LOCATION_LONGITUDE>
        name: <LOCATION_NAME>
        address: <LOCATION_ADDRESS>
    Audio:
      title: Audio
      type: object
      properties:
        id:
          type: string
          description: The media object ID. Required when you are not using a link.
        link:
          type: string
          description: The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when you are not using an uploaded media ID.
      example:
        id: <media-object-id>
    Video:
      title: Video
      type: object
      properties:
        link:
          type: string
          description: The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when you are not using an uploaded media ID.
        id:
          type: string
          description: Required when you are not using a link. The media object ID.
    Document:
      title: Document
      type: object
      properties:
        id:
          type: string
          description: It is the media object ID. Required when you are not using a link.
        link:
          type: string
          description: The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when you are not using an uploaded media ID.
        caption:
          type: string
          description: Describes the specified document media.
        filename:
          type: string
          description: Describes the filename for the specific document.
      example:
        id: <your-media-id>
        caption: <your-document-caption-to-be-sent>
        filename: <your-document-filename>
    Image:
      title: Image
      type: object
      properties:
        id:
          type: string
          description: The media object ID. Required when you are not using a link.
        link:
          type: string
          description: The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when you are not using an uploaded media ID.
        caption:
          type: string
          description: Describes the specified image media.
      example:
        id: <image-object-id>
    Sticker:
      title: Sticker
      type: object
      properties:
        link:
          type: string
          description: The protocol and URL of the media to be sent. Use only with HTTP/HTTPS URLs. Required when you are not using an uploaded media ID.
        id:
          type: string
          description: The media object ID. Required when you are not using a link.
      example:
        link: <link>
    Template:
      title: Template
      required:
      - name
      - language
      type: object
      properties:
        name:
          type: string
          description: Name of the template.
        language:
          type: object
          allOf:
          - $ref: '#/components/schemas/Language'
          description: Specifies the language the template may be rendered in. Only the deterministic language policy works with media template messages.
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
          description: Array of components objects containing the parameters of the message.
      example:
        name: hello_world
        language:
          code: en_US
    ButtonParameter:
      title: ButtonParameter
      required:
      - type
      type: object
      properties:
        type:
          type: object
          allOf:
          - $ref: '#/components/schemas/ButtonParameterType'
          description: Indicates the type of parameter for the button.
        payload:
          type: string
          description: Required for quick_reply buttons. Developer-defined payload that is returned when the button is clicked in addition to the display text on the button.
        text:
          type: string
          description: Required for URL buttons. Developer-provided suffix that is appended to the predefined prefix URL in the template.
    ButtonParameterType:
      title: ButtonParameterType
      enum:
      - payload
      - text
      type: string
      example: text
    Component:
      title: Component
      required:
      - type
      - parameters
      type: object
      properties:
        type:
          description: 'Describes the component type. For text-based templates, we only support the type=body.'
          allOf:
            - $ref: '#/components/schemas/ComponentType'
        sub_type:
          type: object
          allOf:
          - $ref: '#/components/schemas/SubType'
          description: Required when type=button. Not used for the other types. Type of button to create.
        parameters:
          type: array
          items: {}
          description: Required when type=button. Array of parameter objects with the content of the message. For components of type=button, see the button parameter object.
        index:
          type: string
          description: Required when type=button. Not used for the other types. Position index of the button. You can have up to 3 buttons using index values of 0 to 2.
    ComponentType:
      title: ComponentType
      enum:
      - header
      - body
      - button
      type: string
      example: button
    SubType:
      title: SubType
      enum:
      - quick_reply
      - url
      type: string
      example: url
      x-enum-elements:
      - name: QuickReply
        description: Refers to a previously created quick reply button that allows for the customer to return a predefined message.
      - name: Url
        description: Refers to a previously created button that allows the customer to visit the URL generated by appending the text parameter to the predefined prefix URL in the template.
    Currency:
      title: Currency
      required:
      - fallback_value
      - code
      - amount_1000
      type: object
      properties:
        fallback_value:
          type: string
          description: Default text if localization fails.
        code:
          type: string
          description: Currency code as defined in ISO 4217.
        amount_1000:
          type: integer
          description: Amount multiplied by 1000.
          format: int32
      example:
        fallback_value: $100.99
        code: USD
        amount_1000: 100990
    DateTimeObject:
      title: DateTimeObject
      required:
      - fallback_value
      type: object
      properties:
        fallback_value:
          type: string
          description: Default text. For Cloud API, we always use the fallback value, and we do not attempt to localize using other optional fields.
        day_of_week:
          type: integer
          format: int32
        year:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        day_of_month:
          type: integer
          format: int32
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        calendar:
          type: string
      example:
        fallback_value: February 25, 1977
        day_of_week: 5
        year: 1977
        month: 2
        day_of_month: 25
        hour: 15
        minute: 33
        calendar: GREGORIAN
    Language:
      title: Language
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: The code of the language or locale to use. Accepts both language and language_locale formats (e.g., en and en_US).
        policy:
          type: string
          description: The language policy the message should follow.
          default: deterministic
      example:
        code: en_US
    Parameter:
      title: Parameter
      required:
      - type
      type: object
      properties:
        type:
          type: object
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          description: Describes the parameter type. For text-based templates, the only supported parameter types are text, currency, date_time.
        text:
          type: string
          description: Required when type=text. The message’s text. For the header component, the character limit is 60 characters. For the body component, the character limit is 1024 characters.
        currency:
          type: object
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: Required when type=currency.
        date_time:
          type: object
          allOf:
          - $ref: '#/components/schemas/DateTimeObject'
          description: Required when type=date_time.
        image:
          type: object
          allOf:
          - $ref: '#/components/schemas/Image'
          description: Required when type=image.
        document:
          type: object
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Required when type=document. Only PDF documents are supported for media-based message templates.
        video:
          type: object
          allOf: 
            - $ref: '#/components/schemas/Video'
          description: Required when type=video.
      example:
        type: text
        text: text-string
    ParameterType:
      title: ParameterType
      enum:
      - text
      - currency
      - date_time
      - image
      - document
      - video
      type: string
      example: video
    Text:
      title: Text
      required:
      - body
      type: object
      properties:
        body:
          maxLength: 4096
          type: string
          description: 'Required for text messages. The text of the text message which can contain URLs which begin with http:// or https:// and formatting. See available formatting options here. If you include URLs in your text and want to include a preview box in text messages (preview_url: true), make sure the URL starts with http:// or https:// —https:// URLs are preferred. You must include a hostname, since IP addresses will not be matched.'
        preview_url:
          type: boolean
          description: 'By default, WhatsApp recognizes URLs and makes them clickable, but you can also include a preview box with more information about the link. Set this field to true if you want to include a URL preview box. The majority of the time, the receiver will see a URL they can click on when you send an URL, set preview_url to true, and provide a body object with a http or https link. URL previews are only rendered after one of the following has happened: The business has sent a message template to the user. The user initiates a conversation with a "click to chat" link. The user adds the business phone number to their address book and initiates a conversation.'
          default: false
      example:
        body: hello world!  
    MarkMessageAsReadRequest:
      title: MarkMessageAsReadRequest
      required:
      - messaging_product
      - status
      - message_id
      type: object
      properties:
        messaging_product:
          type: string
          description: "Messaging service used for the request. Use 'whatsapp'."
        status:
          type: string
          description: "A message's status. You can use this field to mark a message as read."
        message_id:
          type: string
          description: "Id of the incoming message."
      example:
        messaging_product: whatsapp
        status: read
        message_id: incoming-message-id        
    GetBusinessProfileIDResponse:
      title: GetBusinessProfileIDResponse
      required:
      - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BusinessProfile'
          description: ''
      example:
        data:
        - messaging_product: whatsapp
          address: ADDRESS
          description: DESCRIPTION
          vertical: UNDEFINED
          email: EMAIL
          websites:
          - https://WEBSITE-1
          - https://WEBSITE-2
          profile_picture_url: https://URL
          id: BUSINESS_PROFILE_ID
    BusinessProfile:
      title: BusinessProfile
      required:
      - messaging_product
      - address
      - description
      - id
      type: object
      properties:
        id:
          type: string
          description: "ID of the business profile object."      
        messaging_product:
          type: string
          description: "The messaging service used for the request. Always set it to \"whatsapp\" if you are using the WhatsApp Business API."
        address:
          type: string
          description: "Address of the business."
          maxLength: 256
        description:
          type: string
          description: "Description of the business."
          maxLength: 256
        vertical:
          description: "Industry of the business. This can be either an empty string or one of the accepted values."
          allOf:
            - $ref: "#/components/schemas/Vertical"          
        email:
          type: string
          description: "The contact email address (in valid email format) of the business."
          maxLength: 128
        websites:
          description: "The URLs associated with the business. For instance, a website, Facebook Page, or Instagram. You must include the http:// or https:// portion of the URL."
          type: array
          maxItems: 2
          items:
            type: string
            maxLength: 256
        profile_picture_url:
          description: "URL of the profile picture generated from a call to the Resumable Upload API."
          type: string
      example:
        messaging_product: whatsapp
        address: ADDRESS
        description: DESCRIPTION
        vertical: UNDEFINED
        email: EMAIL
        websites:
        - https://WEBSITE-1
        - https://WEBSITE-2
        profile_picture_url: https://URL
        id: BUSINESS_PROFILE_ID     
    UpdateBusinessProfileRequest:
      title: UpdateBusinessProfileRequest
      required:
      - messaging_product
      type: object
      properties:
        messaging_product:
          type: string
          description: "The messaging service used for the request. Always set it to \"whatsapp\" if you are using the WhatsApp Business API."
        address:
          type: string
          description: "Address of the business."
          maxLength: 256
        description:
          type: string
          description: "Description of the business."
          maxLength: 256
        vertical:
          description: "Industry of the business. This can be either an empty string or one of the accepted values."
          allOf:
            - $ref: "#/components/schemas/Vertical"          
        email:
          type: string
          description: "The contact email address (in valid email format) of the business."
          maxLength: 128
        websites:
          description: "The URLs associated with the business. For instance, a website, Facebook Page, or Instagram. You must include the http:// or https:// portion of the URL."
          type: array
          maxItems: 2
          items:
            type: string
            maxLength: 256
        profile_picture_url:
          description: "URL of the profile picture generated from a call to the Resumable Upload API."
          type: string
      example:
        messaging_product: whatsapp
        address: ADDRESS
        description: DESCRIPTION
        vertical: UNDEFINED
        email: EMAIL
        websites:
        - https://WEBSITE-1
        - https://WEBSITE-2
        profile_picture_url: https://URL
    Vertical:
      title: Vertical
      type: string
      enum:
        - UNDEFINED
        - OTHER
        - AUTO
        - BEAUTY
        - APPAREL
        - EDU
        - ENTERTAIN
        - EVENT_PLAN
        - FINANCE
        - GROCERY
        - GOVT
        - HOTEL
        - HEALTH
        - NONPROFIT
        - PROF_SERVICES
        - RETAIL
        - TRAVEL
        - RESTAURANT
        - NOT_A_BIZ    
    UploadMediaRequest:
      title: UploadMediaRequest
      required:
      - messaging_product
      - file
      - type
      type: object
      properties:
        messaging_product:
          type: string
          description: "Messaging service used for the request. In this case, use whatsapp."
        file:
          type: string
          description: "Path to the file stored in your local directory. For example: \"@/local/path/file.jpg\"."
        type:
          type: string
          description: "Type of media file being uploaded. See Supported Media Types for more information. \n\n Supported options for images are: `image/jpeg`, `image/png` \n\n Supported options for documents are: `text/plain`, `application/pdf`, `application/vnd.ms-powerpoint`, `application/msword`, `application/vnd.ms-excel`, `application/vnd.openxmlformats-officedocument.wordprocessingml.document`, `application/vnd.openxmlformats-officedocument.presentationml.presentation`, `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`\n\nSupported options for audio are: `audio/aac`, `audio/mp4`, `audio/mpeg`, `audio/amr`, `audio/ogg`, `audio/opus`\n\nSupported options for video are: `video/mp4`, `video/3gp`\n\nSupported options for stickers are: `image/webp`"
      example:
        messaging_product: whatsapp
        file: '@/local/path/file.jpg'
        type: <MEDIA_TYPE>
    UploadMedia:
      title: UploadMedia
      required:
      - id
      type: object
      properties:
        id:
          type: string
      example:
        id: '4490709327384033'  
    RequestVerificationCodeRequest:
      title: RequestVerificationCodeRequest
      required:
      - code_method
      - locale
      type: object
      properties:
        code_method:
          description: "Chosen method for verification."
          allOf:
            - $ref: "#/components/schemas/RequestVerificationCodeMethod"
        locale:
          type: string
          description: "Your locale. For example: \"en_US\"."
      example:
        code_method: SMS
        locale: en_US
    RequestVerificationCodeMethod:
      title: RequestVerificationCodeMethod
      type: string
      enum:
        - SMS
        - VOICE
    VerifyCodeRequest:
      title: VerifyCodeRequest
      required:
      - code
      type: object
      properties:
        code:
          type: string
          description: "The code you received after calling FROM_PHONE_NUMBER_ID/request_code."
      example:
        code: <your-requested-code>    
    RetrieveMediaURLResponse:
      title: RetrieveMediaURLResponse
      required:
      - messaging_product
      - url
      - mime_type
      - sha256
      - file_size
      - id
      type: object
      properties:
        messaging_product:
          type: string
        url:
          type: string
        mime_type:
          type: string
        sha256:
          type: string
        file_size:
          type: string
        id:
          type: string
      example:
        messaging_product: whatsapp
        url: <URL>
        mime_type: image/jpeg
        sha256: <HASH>
        file_size: '303833'
        id: '2621233374848975'                                
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security:
- bearer: []
tags:
- name: Messages
  description: "<!-- \nYou can use this API to send text messages, media, and message templates to your customers. To send a message, create a **Message** object. Each message is identified by a unique ID. You can also mark an incoming message as read through the `/messages` endpoint. You can track message status with Webhooks by ID. \n-->\n\nUse the **`/{{Phone-Number-ID}}/messages`** endpoint to send text messages, media (audio, documents, images, and video), and message templates to your customers. For more information relating to the messages you can send, see [Messages](#1f4f7644-cc97-40b5-b8e4-c19da268fff1).\n\nMessages are identified by a unique ID. You can track message status in the Webhooks through its ID. You could also mark an incoming message as read through the **`/{{Phone-Number-ID}}/messages`** endpoint.\n\n## Prerequisites\n\n*   [User Access Token](https://developers.facebook.com/docs/facebook-login/access-tokens#usertokens) with **`whatsapp_business_messaging`** permission\n*   `phone-number-id` for your registered WhatsApp account. See [Get Phone Number](#c72d9c17-554d-4ae1-8f9e-b28a94010b28)."
- name: Registration
  description: "You need to register your phone number in the following scenarios:\n\n*   Account Creation: When you implement this API, you need to register the phone number you want to use to send messages. We enforce [setting two-step verification](#fc57a30c-97e0-4e06-b74b-89fd7fc5f783) during account creation to add an extra layer of security of your accounts.\n*   Name Change: In this case, your phone is already registered and you want to change your display name. To do that, you must first [file for a name change on WhatsApp Manager](https://www.facebook.com/business/help/378834799515077). Once the name is approved, you need to register your phone again under the new name.\n    \n\nBefore registering your phone, you need to verify that you own that phone number with a SMS or voice code. For details, see [Verify Phone Ownership](https://developers.facebook.com/docs/whatsapp/business-management-api/guides/migrate-phone-to-different-waba#step-2--verify-phone-ownership).\n\nIn case you would like to remove your phone from the Cloud API, you can deregister a phone. This can be used in cases where you want to move to the On-Premises API or you want to use your phone number in the regular WhatsApp customer app. You can always reregister your phone with Cloud API later by repeating the registration process.\n\n**You set up** [**two-factor verification**](#fc57a30c-97e0-4e06-b74b-89fd7fc5f783) **and** [**register a phone number**](#b22af3db-9d13-4467-a7a6-4026f71984cb) **in the same API call.**\n\n#### Reminders\n\n*   To use these endpoints, you need to authenticate yourself with a system user access token with the **`whatsapp_business_messaging`** permission.\n*   If you need to find your phone number ID, see [Get Phone Number ID](#c72d9c17-554d-4ae1-8f9e-b28a94010b28)."
- name: Account Migration
  description: "Use the **`/{{Phone-Number-ID}}/register`** endpoint to migrate your WhatsApp Business Accounts from your current on-premise deployment to the new Cloud-Based API. \n\n#### Reminders\n\n* To use this endpoint, you need to authenticate yourself with a system user access token with the **`whatsapp_business_management`** permission.\n\n* If you need to find your phone number ID, see [Get Phone Number ID](#c72d9c17-554d-4ae1-8f9e-b28a94010b28)."
- name: Business Profiles
  description: >-
    To complete the following API calls, you need to get a business profile ID. To do that, make a **GET** call to the **`/{{Phone-Number-ID}}`** endpoint and add `business_profile` as a URL field. Within the **`business_profile`** request, you can specify what you want to know from your business.


    #### Reminders


    * To use this endpoint, you need to authenticate yourself with a system user access token with the **`whatsapp_business_management`** permission.
- name: Media
  description: >-
    You can use the following endpoints to upload, retrieve, or delete media:


    | Endpoint       | Uses |

    | ----------- | ---------- |

    | [POST /{phone-number-ID}/media]() | Upload media. |

    | [GET /{media-ID}]() | Retrieve the URL for a specific media item. |

    | [DELETE /{media-ID}]() | Delete a specific media item. |

    | [GET /{media-URL}]() | Download media from a media URL. |


    #### Reminders


    * To use these endpoints, you need to authenticate yourself with a system user access token with the **`whatsapp_business_messaging`** permission.

    * If you need to find your phone number ID, see [Get Phone Number ID](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/phone-numbers).

    * If you need to find your media URL, see [Retrieve Media URL](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/media#download-media).


    #### Support Media Types

    | Media       | Supported File Type(s) | Size Limit |

    | ----------- | ----------------------- | ---------- |

    | `audio`       | <ul><li>`audio/aac`</li><li>`audio/mp4`</li><li>`audio/mpeg`</li><li>`audio/amr`</li><li>`audio/ogg`</li></ul><br> **Note**: only opus codecs, base audio/ogg is not supported | 16MB |

    | `document`    | <ul><li>`text/plain`</li><li>`application/pdf`</li><li>`application/vnd.ms-powerpoint`</li><li>`application/msword`</li><li>`application/vnd.ms-excel`</li><li>`application/vnd.openxmlformats-officedocument.wordprocessingml.document`</li><li>`application/vnd.openxmlformats-officedocument.presentationml.presentation`</li><li>`application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`</li></ul> | 100MB |

    | `image` | <ul><li>`image/jpeg`</li><li>`image/png`</li></ul> | 5MB |

    | `sticker` | <ul><li>`image/webp`</li></ul> | 100KB |

    | `video` | <ul><li>`video/mp4`</li><li>`video/3sp`</li></ul><br/>**Notes**:<ul><li>Only H.264 video codec and AAC audio codec is supported.</li><li>We support videos with a single audio stream or no audio stream.</li><ul> | 16MB |



    #### Get Media ID

    To complete some of the following API calls, you need to have a media ID. There are two ways to get this ID:


    * **From the API call**: Once you have successfully uploaded media files to the API, the media ID is included in the response to your call.

    * **From Webhooks**: When a business account receives a media message, it downloads the media and uploads it to the Cloud API automatically. That event triggers the Webhooks and sends you a notification that includes the media ID.
- name: Phone Numbers
  description: Some API calls listed in this document require you to know your phone number’s ID. For more information on how to get a list of phone numbers associated with your WhatsApp Business Account, see [Get All Phone Numbers](https://developers.facebook.com/docs/whatsapp/business-management-api/phone-numbers#all-phone-numbers). The API call response includes IDs for each of the phone numbers connected to your WhatsApp Business Account. Save the ID for the phone you want to use with any **`/{phone-number-ID}`** calls.
- name: Two-Step Verification
  description: >-
    You are required to set up two-step verification for your phone number, as this provides an extra layer of security to the business accounts. To set it up, make a **POST** call to **`/{{Phone-Number-ID}}`** and attach the following parameters. There is no endpoint to disable two-step verification.


    <h5>Reminders</h5>


    * To use these endpoints, you need to authenticate yourself with a system user access token with the **`whatsapp_business_messaging`** permission.

    * If you need to find your phone number ID, see [Get Phone Number ID](#c72d9c17-554d-4ae1-8f9e-b28a94010b28).
- name: WhatsApp Business Accounts (WABAs)
  description: >-
    Some API calls listed in this document require you to know your WhatsApp Business Account (WABA) ID. You have the following methods of getting a WABA ID:


    1.  **Business Manager**: This is the most simple way. Just open the [Business Manager](https://business.facebook.com/), select your business, go to Settings and find your WhatsApp Business Account. When you click on the account, you see `"owned by"` and `"id"`. Save that ID number.

    2.  **During Embedded Signup Onboarding**: See [Get Shared WABA ID with accessToken](https://developers.facebook.com/docs/whatsapp/embedded-signup/manage-accounts#get-shared-waba-id-with-accesstoken) for information.

    3.  **Getting all WABAs shared with your business**: See [Get List of Shared WABAs](https://developers.facebook.com/docs/whatsapp/embedded-signup/manage-accounts#get-list-of-shared-wabas) for information.
- name: WABA Subscriptions
  description: "To get Webhook events for a specific WABA, you need to explicitly subscribe to that WABA. You only need to subscribe to a WABA once and then you receive all Webhook events for phone numbers under that WABA. You don’t need to subscribe for every phone number. \n<br><br>\n\n## Reminders\n- To use these endpoints, you need to authenticate yourself with a [System User Access Token](https://developers.facebook.com/docs/facebook-login/access-tokens#usertokens) with the **`whatsapp_business_management`** permission.\n- WhatsApp Business Account ID (WABA ID). If you need to find your WABA ID see [Get WABA ID](#b7f6e513-f4e4-4b62-b4a2-d18dc5e6249c).\n- You need to set up Webhooks server in your application to receive Webhooks events. To learn how to set up Webhooks, see [Webhooks](#41946d3c-6460-4bc2-963f-d5732e48e84e)."
